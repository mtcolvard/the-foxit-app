import math
parks_dict_1 = {919: {'park_lon_lat': [-0.08412343783119, 51.527556921105], 'park_crowflys_distance_and_bearing': {'initial': (1317.727585980543, -0.7505346643102441)}, 'park_distance_from_bestfit_line': {'initial': 481.38632091328833, 'to_largest_park': 230.9692649344435}, 'size_in_hectares': 0.0}, 1040: {'park_lon_lat': [-0.075555186872678, 51.525618133595], 'park_crowflys_distance_and_bearing': {'initial': (808.2018493648911, -0.3883069161670953)}, 'park_distance_from_bestfit_line': {'initial': 9.491276018948783, 'to_largest_park': 149.49135719623334}, 'size_in_hectares': 0.2544}, 1361: {'park_lon_lat': [-0.079234051147161, 51.540965775303], 'park_crowflys_distance_and_bearing': {'initial': (2517.774955795645, -0.22442632673080956)}, 'park_distance_from_bestfit_line': {'initial': 381.56985768618443, 'to_largest_park': 863.1496735461366}, 'size_in_hectares': 0.5}, 1568: {'park_lon_lat': [-0.076768590395894, 51.531033573258], 'park_crowflys_distance_and_bearing': {'initial': (1405.3767404786001, -0.28112401525534203)}, 'park_distance_from_bestfit_line': {'initial': 133.92413445281122, 'to_largest_park': 406.2076228594635}, 'size_in_hectares': 0.0}, 1647: {'park_lon_lat': [-0.07688220298944, 51.528337668669], 'park_crowflys_distance_and_bearing': {'initial': (1123.2322600866562, -0.3619969204953602)}, 'park_distance_from_bestfit_line': {'initial': 16.360457055923316, 'to_largest_park': 236.7288995542237}, 'size_in_hectares': 0.2025}, 1746: {'park_lon_lat': [-0.095814541858328, 51.558321870096], 'park_crowflys_distance_and_bearing': {'initial': (4705.114811935465, -0.37111903959706805)}, 'park_distance_from_bestfit_line': {'initial': 25.614102651852406, 'to_largest_park': 949.6379710951284}, 'size_in_hectares': 0.0}, 1747: {'park_lon_lat': [-0.094372882734824, 51.558298461632], 'park_crowflys_distance_and_bearing': {'initial': (4667.420074520242, -0.35142315058145784)}, 'park_distance_from_bestfit_line': {'initial': 117.32565072737533, 'to_largest_park': 1031.8785925761617}, 'size_in_hectares': 0.0}, 1810: {'park_lon_lat': [-0.082682760333115, 51.527533378947], 'park_crowflys_distance_and_bearing': {'initial': (1249.8507173772791, -0.6936254328050221)}, 'park_distance_from_bestfit_line': {'initial': 389.67447078415944, 'to_largest_park': 148.72814717706473}, 'size_in_hectares': 0.247}, 1811: {'park_lon_lat': [-0.081053155453814, 51.532003004746], 'park_crowflys_distance_and_bearing': {'initial': (1611.4667429658616, -0.43991592303847166)}, 'park_distance_from_bestfit_line': {'initial': 102.02292867640406, 'to_largest_park': 215.9778187715567}, 'size_in_hectares': 0.0}, 1839: {'park_lon_lat': [-0.069678742519302, 51.528219335204], 'park_crowflys_distance_and_bearing': {'initial': (1042.125039195353, 0.09661935996566655)}, 'park_distance_from_bestfit_line': {'initial': 474.91850999813784, 'to_largest_park': 647.9333400967904}, 'size_in_hectares': 0.3706}, 2057: {'park_lon_lat': [-0.093457325647312, 51.545694075215], 'park_crowflys_distance_and_bearing': {'initial': (3356.6894722097863, -0.4779088048447557)}, 'park_distance_from_bestfit_line': {'initial': 339.60451725736146, 'to_largest_park': 323.20840199172085}, 'size_in_hectares': 0.0}, 2085: {'park_lon_lat': [-0.081889523126672, 51.546404747857], 'park_crowflys_distance_and_bearing': {'initial': (3148.5802617219438, -0.2385146862124405)}, 'park_distance_from_bestfit_line': {'initial': 433.2767937688285, 'to_largest_park': 1037.627900718881}, 'size_in_hectares': 0.0}, 2157: {'park_lon_lat': [-0.093457325647312, 51.545694075215], 'park_crowflys_distance_and_bearing': {'initial': (3356.6894722097863, -0.4779088048447557)}, 'park_distance_from_bestfit_line': {'initial': 339.60451725736146, 'to_largest_park': 323.20840199172085}, 'size_in_hectares': 0.0}, 2160: {'park_lon_lat': [-0.086024779307577, 51.550968552799], 'park_crowflys_distance_and_bearing': {'initial': (3712.6262458084925, -0.2810446232952685)}, 'park_distance_from_bestfit_line': {'initial': 354.0848471705059, 'to_largest_park': 1073.37313299069}, 'size_in_hectares': 0.69}, 2271: {'park_lon_lat': [-0.097443714021505, 51.553852053091], 'park_crowflys_distance_and_bearing': {'initial': (4292.372856308323, -0.4376491578283765)}, 'park_distance_from_bestfit_line': {'initial': 262.04173500512036, 'to_largest_park': 584.9284368706215}, 'size_in_hectares': 0.0}, 2451: {'park_lon_lat': [-0.089434695006163, 51.538434605974], 'park_crowflys_distance_and_bearing': {'initial': (2515.084606682862, -0.5274182631251924)}, 'park_distance_from_bestfit_line': {'initial': 377.9764352746598, 'to_largest_park': 117.98406981674384}, 'size_in_hectares': 2.63}, 2522: {'park_lon_lat': [-0.086741077265125, 51.533894432244], 'park_crowflys_distance_and_bearing': {'initial': (1987.2850201746862, -0.5743460623247698)}, 'park_distance_from_bestfit_line': {'initial': 390.49384683380197, 'to_largest_park': 0.0}, 'size_in_hectares': 4.1}, 2717: {'park_lon_lat': [-0.084010256091586, 51.530252837485], 'park_crowflys_distance_and_bearing': {'initial': (1545.9405715089729, -0.6141318629086902)}, 'park_distance_from_bestfit_line': {'initial': 363.82245479008384, 'to_largest_park': 61.490258039682324}, 'size_in_hectares': 0.405}, 2742: {'park_lon_lat': [-0.078398576235896, 51.526564010284], 'park_crowflys_distance_and_bearing': {'initial': (990.304196087774, -0.5324252948039715)}, 'park_distance_from_bestfit_line': {'initial': 153.72694770702887, 'to_largest_park': 41.502153846208884}, 'size_in_hectares': 0.4}, 2838: {'park_lon_lat': [-0.075289906247353, 51.531908573452], 'park_crowflys_distance_and_bearing': {'initial': (1475.7931505139643, -0.19614070167290304)}, 'park_distance_from_bestfit_line': {'initial': 264.8236797545996, 'to_largest_park': 544.9414243777361}, 'size_in_hectares': 0.303}, 2846: {'park_lon_lat': [-0.068390192145626, 51.52460109197], 'park_crowflys_distance_and_bearing': {'initial': (662.6656936163051, 0.2903087299071634)}, 'park_distance_from_bestfit_line': {'initial': 409.8792133843298, 'to_largest_park': 504.20330954314784}, 'size_in_hectares': 0.8328}, 2884: {'park_lon_lat': [-0.090499564281303, 51.547444469716], 'park_crowflys_distance_and_bearing': {'initial': (3446.0570449303145, -0.39914257889049487)}, 'park_distance_from_bestfit_line': {'initial': 77.80407337743205, 'to_largest_park': 600.6770672421804}, 'size_in_hectares': 0.45}, 2895: {'park_lon_lat': [-0.08071295920855, 51.540090728918], 'park_crowflys_distance_and_bearing': {'initial': (2448.7011265012916, -0.27401471424512336)}, 'park_distance_from_bestfit_line': {'initial': 250.67009674365715, 'to_largest_park': 724.4157568916921}, 'size_in_hectares': 0.0}, 2951: {'park_lon_lat': [-0.076427646577775, 51.539121278465], 'park_crowflys_distance_and_bearing': {'initial': (2279.138032460419, -0.16139757295428617)}, 'park_distance_from_bestfit_line': {'initial': 486.61647313685006, 'to_largest_park': 914.6447865848113}, 'size_in_hectares': 0.0}}
# print(len(parks_dict_1.items()))
# print(parks_within_perp_distance.values())
best_fit_to_largest_park = (1987.2850201746862, -0.5743460623247698)
leg = 'initial'
ramblin = 500

def parks_within_perp_distance_fx(parks_dict, journey_leg, fit_line, rambling_tolerance):
    parks_within_perp_distance = {
    k:v for (k, v) in parks_dict.items() if
    # select only parks within ± 45 degrees of inital bearing towards destination
    v['park_crowflys_distance_and_bearing'][journey_leg][1] < (fit_line[1] + math.pi/4) and
    v['park_crowflys_distance_and_bearing'][journey_leg][1] > (fit_line[1] - math.pi/4) and
    # select only parks closer that the crowflys distance from origin to destination
    v['park_crowflys_distance_and_bearing'][journey_leg][0] < fit_line[0] and
    # select parks within users tolerance for rambling
    v['park_distance_from_bestfit_line'][journey_leg] <= rambling_tolerance and
    v['park_distance_from_bestfit_line'][journey_leg] >= 0}
    print(len(parks_within_perp_distance))
    return parks_within_perp_distance


def main():
    parks_within_perp_distance_fx(parks_dict_1, leg, best_fit_to_largest_park, ramblin)

if __name__ == "__main__":
    main()


        # parks_within_perp_distance = {
        # k:v for (k, v) in parks_dict.items() if
        # # select only parks within ± 45 degrees of inital bearing towards destination
        # v['park_crowflys_distance_and_bearing']['initial'][1] < (best_fit_origin_to_destination[1] + math.pi/4) and
        # v['park_crowflys_distance_and_bearing']['initial'][1] > (best_fit_origin_to_destination[1] - math.pi/4) and
        # # select only parks closer that the crowflys distance from origin to destination
        # v['park_crowflys_distance_and_bearing']['initial'][0] < best_fit_origin_to_destination[0] and
        # # select parks within users tolerance for rambling
        # v['park_distance_from_bestfit_line']['initial'] <= rambling_tolerance and
        # v['park_distance_from_bestfit_line']['initial'] >= 0}
